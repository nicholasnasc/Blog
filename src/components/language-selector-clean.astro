---
---

<div id="language-selector" class="language-selector relative inline-block">
  <button 
    id="lang-button"
    class="flex items-center space-x-2 px-3 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
  >
    <span id="current-lang" class="text-sm font-medium">Portugu√™s</span>
    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>
  
  <div 
    id="lang-menu"
    class="absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 z-50 hidden"
  >
    <div class="py-1">
      <button class="lang-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors" data-lang="pt">
        <span class="flag mr-2">üáßüá∑</span>
        Portugu√™s
      </button>
      <button class="lang-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors" data-lang="en">
        <span class="flag mr-2">üá∫üá∏</span>
        English
      </button>
      <button class="lang-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors" data-lang="es">
        <span class="flag mr-2">üá™üá∏</span>
        Espa√±ol
      </button>
      <button class="lang-option block w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors" data-lang="fr">
        <span class="flag mr-2">üá´üá∑</span>
        Fran√ßais
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const translations = {
      pt: {
        name: 'Portugu√™s',
        title: 'Ol√°, sou Nicholas',
        description: 'Apaixonado por tecnologia e cria√ß√£o de solu√ß√µes inovadoras',
        currentWork: 'Atualmente trabalhando com:',
        followMe: 'Follow me on ùïè'
      },
      en: {
        name: 'English',
        title: 'Hello, I\'m Nicholas',
        description: 'Passionate about technology and creating innovative solutions',
        currentWork: 'Currently working with:',
        followMe: 'Follow me on ùïè'
      },
      es: {
        name: 'Espa√±ol',
        title: 'Hola, soy Nicholas',
        description: 'Apasionado por la tecnolog√≠a y la creaci√≥n de soluciones innovadoras',
        currentWork: 'Actualmente trabajando con:',
        followMe: 'S√≠gueme en ùïè'
      },
      fr: {
        name: 'Fran√ßais',
        title: 'Bonjour, je suis Nicholas',
        description: 'Passionn√© par la technologie et la cr√©ation de solutions innovantes',
        currentWork: 'Actuellement en train de travailler avec:',
        followMe: 'Suivez-moi sur ùïè'
      }
    };

    function getCurrentLanguage() {
      return localStorage.getItem('preferred-language') || 'pt';
    }

    function updateLanguageDisplay() {
      const currentLang = getCurrentLanguage();
      const currentLangSpan = document.getElementById('current-lang');
      
      if (currentLangSpan && translations[currentLang]) {
        currentLangSpan.textContent = translations[currentLang].name;
      }
      
      document.querySelectorAll('.lang-option').forEach(function(option) {
        const lang = option.getAttribute('data-lang');
        if (lang === currentLang) {
          option.classList.add('bg-blue-50', 'dark:bg-blue-900', 'text-blue-700', 'dark:text-blue-300');
        } else {
          option.classList.remove('bg-blue-50', 'dark:bg-blue-900', 'text-blue-700', 'dark:text-blue-300');
        }
      });
    }

    function translatePage(lang) {
      const trans = translations[lang];
      if (!trans) return;

      const title = document.querySelector('h1');
      const description = document.querySelector('.mb-6');
      const currentWork = document.querySelector('.font-semibold');
      const button = document.querySelector('a[href*="x.com"]');

      if (title) title.textContent = trans.title;
      if (description) {
        const textNode = description.childNodes[0];
        if (textNode && textNode.nodeType === Node.TEXT_NODE) {
          textNode.textContent = trans.description + ' ';
        }
      }
      if (currentWork) currentWork.textContent = trans.currentWork;
      if (button) button.textContent = trans.followMe;
    }

    updateLanguageDisplay();
    translatePage(getCurrentLanguage());

    const button = document.getElementById('lang-button');
    const menu = document.getElementById('lang-menu');

    if (button) {
      button.addEventListener('click', function(e) {
        e.stopPropagation();
        if (menu) {
          menu.classList.toggle('hidden');
        }
      });
    }

    document.addEventListener('click', function() {
      if (menu) {
        menu.classList.add('hidden');
      }
    });

    document.querySelectorAll('.lang-option').forEach(function(option) {
      option.addEventListener('click', function(e) {
        e.stopPropagation();
        const lang = option.getAttribute('data-lang');
        
        if (lang) {
          localStorage.setItem('preferred-language', lang);
          updateLanguageDisplay();
          translatePage(lang);
          if (menu) {
            menu.classList.add('hidden');
          }
        }
      });
    });
  });
</script>

<style>
  .language-selector {
    user-select: none;
  }
  
  .flag {
    font-size: 1.2em;
  }
</style>
